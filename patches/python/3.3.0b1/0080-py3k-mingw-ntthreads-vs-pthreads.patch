diff -urN a-3.3.0b1/Python/condvar.h b-3.3.0b1/Python/condvar.h
--- a-3.3.0b1/Python/condvar.h	Tue Jun 26 21:19:56 2012
+++ b-3.3.0b1/Python/condvar.h	Sun Nov 18 21:47:37 2012
@@ -42,6 +42,12 @@
 
 #include "Python.h"
 
+#ifdef __MINGW32__
+# if !defined(HAVE_PTHREAD_H) || defined(NT_THREADS)
+#  undef _POSIX_THREADS
+# endif
+#endif
+
 #ifndef _POSIX_THREADS
 /* This means pthreads are not implemented in libc headers, hence the macro
    not present in unistd.h. But they still can be implemented as an external
diff -urN a-3.3.0b1/Python/thread.c b-3.3.0b1/Python/thread.c
--- a-3.3.0b1/Python/thread.c	Sun Nov 18 21:44:59 2012
+++ b-3.3.0b1/Python/thread.c	Sun Nov 18 21:47:37 2012
@@ -15,7 +15,9 @@
   __MINGW32__ to prevent case when in GCC 3.4.5 build
   envirionment is installed posix thread package.
  */
-# undef HAVE_PTHREAD_H
+# if !defined(HAVE_PTHREAD_H) || defined(NT_THREADS)
+#  undef _POSIX_THREADS
+# endif
 #endif
 
 #ifndef _POSIX_THREADS
diff -urN a-3.3.0b1/configure.ac b-3.3.0b1/configure.ac
--- a-3.3.0b1/configure.ac	Sun Nov 18 21:45:00 2012
+++ b-3.3.0b1/configure.ac	Sun Nov 18 21:55:11 2012
@@ -1446,6 +1446,16 @@
   CFLAGS=$save_CFLAGS
 fi
 
+AC_MSG_CHECKING(for NT threads)
+AC_CACHE_VAL(ac_cv_ntthread,
+[AC_LINK_IFELSE([
+	AC_LANG_PROGRAM([], [_beginthread(0, 0, 0);])],
+ac_cv_ntthread=yes,
+ac_cv_ntthread=no)])
+AC_MSG_RESULT([$ac_cv_ntthread])
+
+if test $ac_cv_ntthread  = no
+then
 # On some compilers, pthreads are available without further options
 # (e.g. MacOS X). On some of these systems, the compiler will not
 # complain if unaccepted options are passed (e.g. gcc on Mac OS X).
@@ -1560,17 +1570,6 @@
 AC_MSG_RESULT($ac_cv_pthread)
 fi
 
-if test "x$ac_cv_kpthread" = xno && \
-   test "x$ac_cv_kthread" = xno && \
-   test "x$ac_cv_pthread" = xno && \
-   test "x$ac_cv_pthread_is_default" = xno
-then
-	AC_MSG_CHECKING(for NT threads)
-	AC_CACHE_VAL(ac_cv_ntthread,
-	[AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[_beginthread(0, 0, 0);]])],
-	ac_cv_ntthread=yes,
-	ac_cv_ntthread=no)])
-	AC_MSG_RESULT([$ac_cv_ntthread])
 fi
 
 # If we have set a CC compiler flag for thread support then
